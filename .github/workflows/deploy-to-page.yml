# .github/workflows/pyxel-web.yml
name: Build & Deploy Pyxel Web

# ——-- Trigger the build on every push to main, PRs, or manual run
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# GitHub Pages needs these three permissions
permissions:
  contents: read          # checkout
  pages:    write         # publish
  id-token: write         # OIDC for Pages

# Adjustable project-wide settings
env:
  PYTHON_VERSION: "3.12"      # Any 3.8 +
  APP_DIR:        "src"       # Where your .py files live
  STARTUP_SCRIPT: "main.py"   # Entry point
  APP_NAME:       "game"      # Basename for the .pyxapp
  OUTPUT_DIR:     "web"       # Folder that becomes the web site

concurrency:               # Prevent two deploys racing
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Install Pyxel CLI
        run: |
          python -m pip install --upgrade pip
          pip install pyxel

      # 1️⃣  Package the whole game into a single .pyxapp
      - name: Build .pyxapp
        run: |
          mkdir -p dist
          pyxel package ${{ env.APP_DIR }} ${{ env.STARTUP_SCRIPT }} \
                        --output dist/${{ env.APP_NAME }}.pyxapp   # :contentReference[oaicite:0]{index=0}

      # 2️⃣  Convert that package to a standalone HTML file
      - name: Convert to HTML
        run: |
          mkdir -p ${{ env.OUTPUT_DIR }}
          pyxel app2html dist/${{ env.APP_NAME }}.pyxapp \
                         --output ${{ env.OUTPUT_DIR }}/index.html \
                         --title  "My Pyxel Game"                  # :contentReference[oaicite:1]{index=1}

      - name: Disable Jekyll (optional but safe)
        run: touch ${{ env.OUTPUT_DIR }}/.nojekyll

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ${{ env.OUTPUT_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
