# GitHub Actions workflow — build & publish your Python game to GitHub Pages
# -------------------------------------------------------------------------
# – Triggered on every push to the default branch (main) or via the manual
#   "Run workflow" button.
# – Uses pygbag to transpile your game (pygame/arcade/etc.) to WebAssembly
#   so it can run in the browser through Pyodide.
# – Uploads the generated static site (dist/) as a Pages artifact and
#   publishes it via the native GitHub Pages deployment action.
# -------------------------------------------------------------------------

name: Build & Deploy Python Game to GitHub Pages

on:
  push:
    branches: [ "main" ]   # change if you use a different default branch
  workflow_dispatch:       # allow manual runs from the Actions tab

# Minimal permissions required by the Pages service
permissions:
  contents: read     # to clone the repo
  pages: write       # to push the static site
  id-token: write    # to authenticate the deployment

# Prevent overlapping builds on fast‑moving branches
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout source
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"      # match your dev version

      - name: 📦 Install build toolchain (pygbag)
        run: |
          python -m pip install --upgrade pip
          python -m pip install pygbag         # compiles pygame‑style code to WASM

      - name: 🏗️ Build web bundle
        run: |
          # Replace main.py with your real entry point if different
          pygbag --build main.py --output dist

      # OPTIONAL: If your game depends on extra data (images, sounds, etc.)
      # you can sync them into dist/ here, e.g.:
      #   rsync -av --exclude "*.py" assets/ dist/assets/

      - name: 📤 Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: dist                    # folder produced by pygbag

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
